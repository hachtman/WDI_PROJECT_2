//Improved functions.

Using the random.org API for true randomness.
App.getRandBetweenRange = function() {
  $.ajax({
    url: "https://api.random.org/json-rpc/1/invoke",
    "jsonrpc": "2.0",
    method: "generateDecimalFractions",
    params: {"apiKey": "fc669aa6-c950-4d03-bb5d-5c984a75fa1b",
      "n": 2, "min": -180, "max": 180, "decimalPlaces": 15, "base": 10},
    id: 14395
  }).done((data) => {
    console.log(data);
  });
};


//Recursively find the next panorama.
// App.findNearestPanorama = function(coords) {
//   const ssService = new google.maps.StreetViewService();
//   var svMaxDist = 10000000000000000;
//   const latLng = new google.maps.LatLng(coords.lat, coords.lng);
//   ssService.getPanorama({location: latLng, radius: svMaxDist}, function(data, status) {
//     console.log(data);
//
//     if (status === 'OK') {
//       const panoLat = data.location.latLng.lat();
//       const panoLng = data.location.latLng.lng();
//       App.coords    = { lat: panoLat, lng: panoLng };
//       App.setPosition();
//     } else {
//       svMaxDist = svMaxDist + ((svMaxDist / 0.1) * 100);
//       console.log(coords);
//     }
//   });
//
// };


//Check the distance between the users coordinate and the actual coordinate.
App.haversineDistance = function(coords, guessCoords) {
  const earthRadius = 6378137; //meters
  const latDistance = App.radius(coords.lat - guessCoords.lat);
  const lngDistance = App.radius(coords.lng - guessCoords.lng);

  const a = Math.sin(latDistance / 2) * Math.sin(latDistance / 2) + Math.cos(App.radius(coords.lat)) * Math.cos(App.radius(guessCoords.lat)) * Math.sin(lngDistance / 2) * Math.sin(lngDistance / 2);

  const b = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
  const dist = earthRadius * b;
  return dist / 1000; //Return distance in km.
};

App.checkSvAvailable = function(coords) {
  const svService2   = new google.maps.StreetViewService();
  const svMaxDist = 10000000000;
  const latLng = new google.maps.LatLng(coords.lat, coords.lng);
  svService2.getPanorama({ location: latLng, radius: svMaxDist }, function(data, status) {
    console.log(status);
    if (status === 'OK') {
      const panoLat = data.location.latLng.lat();
      const panoLng = data.location.latLng.lng();
      App.coords    = { lat: panoLat, lng: panoLng };
      App.setPosition();
    } else if (status === 'ZERO_RESULTS') {
      // App.checkSvAvailable(App.randomCoordsEurope());
      console.log(status);
      return false;
    }
  });
};
